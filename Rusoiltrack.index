<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Russian Oil Refinery Status Tracker</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #1e3c72, #2a5298);
            color: white;
            min-height: 100vh;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.5);
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
        }

        .controls {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .legend {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .legend-item {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 10px 20px;
            background: rgba(255,255,255,0.1);
            border-radius: 25px;
            backdrop-filter: blur(10px);
        }

        .legend-color {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            border: 2px solid white;
        }

        .operational { background-color: #4CAF50; }
        .light-damage { background-color: #FFC107; }
        .critical-damage { background-color: #FF9800; }
        .offline { background-color: #F44336; }

        .grid-container {
            max-width: 1400px;
            margin: 0 auto;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 20px;
            padding: 20px;
        }

        .refinery-card {
            background: rgba(255,255,255,0.1);
            border-radius: 15px;
            padding: 20px;
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255,255,255,0.2);
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .refinery-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        }

        .refinery-card.operational {
            border-color: #4CAF50;
            box-shadow: 0 0 20px rgba(76, 175, 80, 0.3);
        }

        .refinery-card.light-damage {
            border-color: #FFC107;
            box-shadow: 0 0 20px rgba(255, 193, 7, 0.3);
        }

        .refinery-card.critical-damage {
            border-color: #FF9800;
            box-shadow: 0 0 20px rgba(255, 152, 0, 0.3);
        }

        .refinery-card.offline {
            border-color: #F44336;
            box-shadow: 0 0 20px rgba(244, 67, 54, 0.3);
        }

        .refinery-name {
            font-size: 1.3rem;
            font-weight: bold;
            margin-bottom: 10px;
            color: white;
        }

        .refinery-location {
            font-size: 0.9rem;
            opacity: 0.8;
            margin-bottom: 15px;
        }

        .refinery-stats {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 15px;
        }

        .stat-item {
            background: rgba(0,0,0,0.2);
            padding: 8px;
            border-radius: 8px;
            text-align: center;
        }

        .stat-value {
            font-size: 1.2rem;
            font-weight: bold;
            color: #FFD700;
        }

        .stat-label {
            font-size: 0.8rem;
            opacity: 0.8;
        }

        .last-strike {
            font-size: 0.9rem;
            padding: 10px;
            background: rgba(0,0,0,0.3);
            border-radius: 8px;
            margin-top: 10px;
        }

        .capacity {
            font-size: 0.9rem;
            margin-bottom: 10px;
            padding: 8px;
            background: rgba(255,255,255,0.1);
            border-radius: 8px;
        }

        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-weight: bold;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255,255,255,0.3);
            color: white;
            font-size: 1rem;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        }

        .btn-operational { background: rgba(76, 175, 80, 0.8); }
        .btn-light { background: rgba(255, 193, 7, 0.8); }
        .btn-critical { background: rgba(255, 152, 0, 0.8); }
        .btn-offline { background: rgba(244, 67, 54, 0.8); }

        .stats-summary {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin-bottom: 30px;
            flex-wrap: wrap;
        }

        .summary-item {
            text-align: center;
            padding: 15px 25px;
            background: rgba(255,255,255,0.1);
            border-radius: 15px;
            backdrop-filter: blur(10px);
        }

        .summary-number {
            font-size: 2rem;
            font-weight: bold;
            color: #FFD700;
        }

        .summary-label {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.8);
            z-index: 1000;
            backdrop-filter: blur(5px);
        }

        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: linear-gradient(135deg, #2a5298, #1e3c72);
            padding: 30px;
            border-radius: 20px;
            max-width: 500px;
            width: 90%;
            border: 2px solid rgba(255,255,255,0.3);
        }

        .modal h3 {
            margin-bottom: 20px;
            color: #FFD700;
        }

        .modal-buttons {
            display: flex;
            gap: 10px;
            justify-content: center;
            margin-top: 20px;
            flex-wrap: wrap;
        }

        .close-modal {
            position: absolute;
            top: 10px;
            right: 15px;
            background: none;
            border: none;
            font-size: 2rem;
            color: white;
            cursor: pointer;
            padding: 5px;
        }

        @media (max-width: 768px) {
            .grid-container {
                grid-template-columns: 1fr;
                padding: 10px;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .controls, .legend, .stats-summary {
                flex-direction: column;
                align-items: center;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>üè≠ Russian Oil Refinery Status Tracker</h1>
        <p>Real-time monitoring of refinery operational status and strike impacts</p>
    </div>

    <div class="stats-summary" id="statsSummary">
        <div class="summary-item">
            <div class="summary-number" id="totalRefineries">0</div>
            <div class="summary-label">Total Refineries</div>
        </div>
        <div class="summary-item">
            <div class="summary-number" id="operationalCount">0</div>
            <div class="summary-label">Operational</div>
        </div>
        <div class="summary-item">
            <div class="summary-number" id="damagedCount">0</div>
            <div class="summary-label">Damaged</div>
        </div>
        <div class="summary-item">
            <div class="summary-number" id="offlineCount">0</div>
            <div class="summary-label">Offline</div>
        </div>
    </div>

    <div class="legend">
        <div class="legend-item">
            <div class="legend-color operational"></div>
            <span>Operational</span>
        </div>
        <div class="legend-item">
            <div class="legend-color light-damage"></div>
            <span>Light Damage</span>
        </div>
        <div class="legend-item">
            <div class="legend-color critical-damage"></div>
            <span>Critical Damage</span>
        </div>
        <div class="legend-item">
            <div class="legend-color offline"></div>
            <span>Permanently Offline</span>
        </div>
    </div>

    <div class="controls">
        <button class="btn btn-operational" onclick="filterRefineries('operational')">Show Operational</button>
        <button class="btn btn-light" onclick="filterRefineries('light-damage')">Show Light Damage</button>
        <button class="btn btn-critical" onclick="filterRefineries('critical-damage')">Show Critical Damage</button>
        <button class="btn btn-offline" onclick="filterRefineries('offline')">Show Offline</button>
        <button class="btn" onclick="filterRefineries('all')" style="background: rgba(255,255,255,0.2);">Show All</button>
    </div>

    <div class="grid-container" id="refineryGrid">
        <!-- Refinery cards will be populated here -->
    </div>

    <div class="modal" id="editModal">
        <div class="modal-content">
            <button class="close-modal" onclick="closeModal()">&times;</button>
            <h3 id="modalTitle">Update Refinery Status</h3>
            <p id="modalRefinery"></p>
            <div class="modal-buttons">
                <button class="btn btn-operational" onclick="updateStatus('operational')">Operational</button>
                <button class="btn btn-light" onclick="updateStatus('light-damage')">Light Damage</button>
                <button class="btn btn-critical" onclick="updateStatus('critical-damage')">Critical Damage</button>
                <button class="btn btn-offline" onclick="updateStatus('offline')">Permanently Offline</button>
            </div>
        </div>
    </div>

    <script>
        let refineries = [
            { id: 1, name: "Omsk Refinery", location: "Omsk", capacity: "426,000 bpd", status: "operational", strikes: 2, lastStrike: "2024-03-15" },
            { id: 2, name: "Tuapse Refinery", location: "Tuapse", capacity: "240,000 bpd", status: "critical-damage", strikes: 5, lastStrike: "2024-08-22" },
            { id: 3, name: "Novoshakhtinsk Refinery", location: "Rostov Oblast", capacity: "138,000 bpd", status: "offline", strikes: 8, lastStrike: "2024-08-20" },
            { id: 4, name: "Ryazan Refinery", location: "Ryazan", capacity: "340,000 bpd", status: "light-damage", strikes: 3, lastStrike: "2024-07-18" },
            { id: 5, name: "Yaroslavl Refinery", location: "Yaroslavl", capacity: "273,000 bpd", status: "operational", strikes: 1, lastStrike: "2024-05-10" },
            { id: 6, name: "Saratov Refinery", location: "Saratov", capacity: "170,000 bpd", status: "critical-damage", strikes: 4, lastStrike: "2024-08-25" },
            { id: 7, name: "Nizhny Novgorod Refinery", location: "Nizhny Novgorod", capacity: "340,000 bpd", status: "operational", strikes: 0, lastStrike: "Never" },
            { id: 8, name: "Volgograd Refinery", location: "Volgograd", capacity: "320,000 bpd", status: "light-damage", strikes: 2, lastStrike: "2024-06-30" },
            { id: 9, name: "Antipino Refinery", location: "Tyumen", capacity: "180,000 bpd", status: "operational", strikes: 0, lastStrike: "Never" },
            { id: 10, name: "Ilsky Refinery", location: "Krasnodar", capacity: "200,000 bpd", status: "offline", strikes: 6, lastStrike: "2024-08-10" },
            { id: 11, name: "Kremenchuk Refinery", location: "Poltava", capacity: "230,000 bpd", status: "critical-damage", strikes: 7, lastStrike: "2024-08-28" },
            { id: 12, name: "Syzran Refinery", location: "Samara", capacity: "340,000 bpd", status: "operational", strikes: 1, lastStrike: "2024-04-22" },
            { id: 13, name: "Pavlovo Refinery", location: "Nizhny Novgorod", capacity: "17,000 bpd", status: "light-damage", strikes: 2, lastStrike: "2024-07-05" },
            { id: 14, name: "Ust-Luga Complex", location: "Leningrad", capacity: "300,000 bpd", status: "operational", strikes: 0, lastStrike: "Never" },
            { id: 15, name: "Taneco Refinery", location: "Tatarstan", capacity: "340,000 bpd", status: "operational", strikes: 0, lastStrike: "Never" },
            { id: 16, name: "Slavyansk Refinery", location: "Slavyansk", capacity: "120,000 bpd", status: "offline", strikes: 9, lastStrike: "2024-08-18" },
            { id: 17, name: "Kstovo Refinery", location: "Nizhny Novgorod", capacity: "340,000 bpd", status: "light-damage", strikes: 1, lastStrike: "2024-08-12" },
            { id: 18, name: "Moscow Refinery", location: "Moscow", capacity: "230,000 bpd", status: "critical-damage", strikes: 3, lastStrike: "2024-08-20" },
            { id: 19, name: "Achinsk Refinery", location: "Krasnoyarsk", capacity: "140,000 bpd", status: "operational", strikes: 0, lastStrike: "Never" },
            { id: 20, name: "Angarsk Refinery", location: "Irkutsk", capacity: "227,000 bpd", status: "operational", strikes: 0, lastStrike: "Never" }
        ];

        let currentEditingId = null;

        function renderRefineries(filteredRefineries = null) {
            const grid = document.getElementById('refineryGrid');
            const refineriesToShow = filteredRefineries || refineries;
            
            grid.innerHTML = refineriesToShow.map(refinery => `
                <div class="refinery-card ${refinery.status}" onclick="openEditModal(${refinery.id})">
                    <div class="refinery-name">${refinery.name}</div>
                    <div class="refinery-location">üìç ${refinery.location}</div>
                    <div class="capacity">‚ö° Capacity: ${refinery.capacity}</div>
                    <div class="refinery-stats">
                        <div class="stat-item">
                            <div class="stat-value">${refinery.strikes}</div>
                            <div class="stat-label">Strikes</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-value">${refinery.status.replace('-', ' ').toUpperCase()}</div>
                            <div class="stat-label">Status</div>
                        </div>
                    </div>
                    <div class="last-strike">
                        üéØ Last Strike: ${refinery.lastStrike}
                    </div>
                </div>
            `).join('');
            
            updateSummaryStats();
        }

        function updateSummaryStats() {
            const total = refineries.length;
            const operational = refineries.filter(r => r.status === 'operational').length;
            const damaged = refineries.filter(r => r.status === 'light-damage' || r.status === 'critical-damage').length;
            const offline = refineries.filter(r => r.status === 'offline').length;

            document.getElementById('totalRefineries').textContent = total;
            document.getElementById('operationalCount').textContent = operational;
            document.getElementById('damagedCount').textContent = damaged;
            document.getElementById('offlineCount').textContent = offline;
        }

        function filterRefineries(status) {
            if (status === 'all') {
                renderRefineries();
            } else {
                const filtered = refineries.filter(r => r.status === status);
                renderRefineries(filtered);
            }
        }

        function openEditModal(id) {
            const refinery = refineries.find(r => r.id === id);
            if (refinery) {
                currentEditingId = id;
                document.getElementById('modalRefinery').textContent = `${refinery.name} - ${refinery.location}`;
                document.getElementById('editModal').style.display = 'block';
            }
        }

        function closeModal() {
            document.getElementById('editModal').style.display = 'none';
            currentEditingId = null;
        }

        function updateStatus(newStatus) {
            if (currentEditingId) {
                const refinery = refineries.find(r => r.id === currentEditingId);
                if (refinery) {
                    refinery.status = newStatus;
                    if (newStatus !== 'operational') {
                        refinery.strikes += 1;
                        refinery.lastStrike = new Date().toISOString().split('T')[0];
                    }
                    renderRefineries();
                    closeModal();
                }
            }
        }

        // Close modal when clicking outside
        document.getElementById('editModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        // Initialize the app
        renderRefineries();
    </script>
</body>
</html>
